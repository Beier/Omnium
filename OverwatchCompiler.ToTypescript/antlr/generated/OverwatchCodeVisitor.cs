//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Beier\Documents\Visual Studio 2017\Projects\OverwatchCompiler\OverwatchCompiler.ToTypescript\antlr\OverwatchCode.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="OverwatchCodeParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public interface IOverwatchCodeVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.root"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRoot([NotNull] OverwatchCodeParser.RootContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRule([NotNull] OverwatchCodeParser.RuleContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.eventBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEventBlock([NotNull] OverwatchCodeParser.EventBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.eventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEventType([NotNull] OverwatchCodeParser.EventTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.ongoingGlobalEventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOngoingGlobalEventType([NotNull] OverwatchCodeParser.OngoingGlobalEventTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.ongoingEachPlayerEventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOngoingEachPlayerEventType([NotNull] OverwatchCodeParser.OngoingEachPlayerEventTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.playerEarnedEliminationEventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPlayerEarnedEliminationEventType([NotNull] OverwatchCodeParser.PlayerEarnedEliminationEventTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.playerDealtFinalBlowEventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPlayerDealtFinalBlowEventType([NotNull] OverwatchCodeParser.PlayerDealtFinalBlowEventTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.playerDealtDamageEventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPlayerDealtDamageEventType([NotNull] OverwatchCodeParser.PlayerDealtDamageEventTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.playerTookDamageEventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPlayerTookDamageEventType([NotNull] OverwatchCodeParser.PlayerTookDamageEventTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.playerDiedEventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPlayerDiedEventType([NotNull] OverwatchCodeParser.PlayerDiedEventTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.conditionBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditionBlock([NotNull] OverwatchCodeParser.ConditionBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondition([NotNull] OverwatchCodeParser.ConditionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.actionBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitActionBlock([NotNull] OverwatchCodeParser.ActionBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.action"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAction([NotNull] OverwatchCodeParser.ActionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.setGlobalVariableAction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSetGlobalVariableAction([NotNull] OverwatchCodeParser.SetGlobalVariableActionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] OverwatchCodeParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.vectorExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVectorExpression([NotNull] OverwatchCodeParser.VectorExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.addExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddExpression([NotNull] OverwatchCodeParser.AddExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.absoluteValueExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAbsoluteValueExpression([NotNull] OverwatchCodeParser.AbsoluteValueExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.allDeadPlayersExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAllDeadPlayersExpression([NotNull] OverwatchCodeParser.AllDeadPlayersExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.allHeroesExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAllHeroesExpression([NotNull] OverwatchCodeParser.AllHeroesExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.allLivingPlayersExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAllLivingPlayersExpression([NotNull] OverwatchCodeParser.AllLivingPlayersExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.allPlayersExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAllPlayersExpression([NotNull] OverwatchCodeParser.AllPlayersExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.allPlayersNotOnObjectiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAllPlayersNotOnObjectiveExpression([NotNull] OverwatchCodeParser.AllPlayersNotOnObjectiveExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.allPlayersOnObjectiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAllPlayersOnObjectiveExpression([NotNull] OverwatchCodeParser.AllPlayersOnObjectiveExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.allowedHeroesExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAllowedHeroesExpression([NotNull] OverwatchCodeParser.AllowedHeroesExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.altitudeOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAltitudeOfExpression([NotNull] OverwatchCodeParser.AltitudeOfExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.eventPlayerExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEventPlayerExpression([NotNull] OverwatchCodeParser.EventPlayerExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.andExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndExpression([NotNull] OverwatchCodeParser.AndExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.angleDifferenceExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAngleDifferenceExpression([NotNull] OverwatchCodeParser.AngleDifferenceExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.appendToArrayExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAppendToArrayExpression([NotNull] OverwatchCodeParser.AppendToArrayExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.arrayContainsExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayContainsExpression([NotNull] OverwatchCodeParser.ArrayContainsExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.arraySliceExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArraySliceExpression([NotNull] OverwatchCodeParser.ArraySliceExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.attackerExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAttackerExpression([NotNull] OverwatchCodeParser.AttackerExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.backwardExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBackwardExpression([NotNull] OverwatchCodeParser.BackwardExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.closestPlayerToExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClosestPlayerToExpression([NotNull] OverwatchCodeParser.ClosestPlayerToExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.compareExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompareExpression([NotNull] OverwatchCodeParser.CompareExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.controlModeScoringPercentageExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitControlModeScoringPercentageExpression([NotNull] OverwatchCodeParser.ControlModeScoringPercentageExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.globalVariableExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobalVariableExpression([NotNull] OverwatchCodeParser.GlobalVariableExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.controlModeScoringTeamExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitControlModeScoringTeamExpression([NotNull] OverwatchCodeParser.ControlModeScoringTeamExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.cosineFromDegreesExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCosineFromDegreesExpression([NotNull] OverwatchCodeParser.CosineFromDegreesExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.cosineFromRadiansExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCosineFromRadiansExpression([NotNull] OverwatchCodeParser.CosineFromRadiansExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.countOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCountOfExpression([NotNull] OverwatchCodeParser.CountOfExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.crossProductExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCrossProductExpression([NotNull] OverwatchCodeParser.CrossProductExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.currentArrayElementExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCurrentArrayElementExpression([NotNull] OverwatchCodeParser.CurrentArrayElementExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.directionFromAnglesExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDirectionFromAnglesExpression([NotNull] OverwatchCodeParser.DirectionFromAnglesExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.directionTowardsExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDirectionTowardsExpression([NotNull] OverwatchCodeParser.DirectionTowardsExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.distanceBetweenExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDistanceBetweenExpression([NotNull] OverwatchCodeParser.DistanceBetweenExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.divideExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDivideExpression([NotNull] OverwatchCodeParser.DivideExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.dotProductExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDotProductExpression([NotNull] OverwatchCodeParser.DotProductExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.downExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDownExpression([NotNull] OverwatchCodeParser.DownExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.emptyArrayExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmptyArrayExpression([NotNull] OverwatchCodeParser.EmptyArrayExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.entityExistsExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEntityExistsExpression([NotNull] OverwatchCodeParser.EntityExistsExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.eventDamageExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEventDamageExpression([NotNull] OverwatchCodeParser.EventDamageExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.eventWasCriticalHitExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEventWasCriticalHitExpression([NotNull] OverwatchCodeParser.EventWasCriticalHitExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.eyePositionExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEyePositionExpression([NotNull] OverwatchCodeParser.EyePositionExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.facingDirectionOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFacingDirectionOfExpression([NotNull] OverwatchCodeParser.FacingDirectionOfExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.farthestPlayerFromExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFarthestPlayerFromExpression([NotNull] OverwatchCodeParser.FarthestPlayerFromExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.filteredArrayExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFilteredArrayExpression([NotNull] OverwatchCodeParser.FilteredArrayExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.firstOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFirstOfExpression([NotNull] OverwatchCodeParser.FirstOfExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.flagPositionExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFlagPositionExpression([NotNull] OverwatchCodeParser.FlagPositionExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.forwardExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForwardExpression([NotNull] OverwatchCodeParser.ForwardExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.hasSpawnedExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHasSpawnedExpression([NotNull] OverwatchCodeParser.HasSpawnedExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.hasStatusExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHasStatusExpression([NotNull] OverwatchCodeParser.HasStatusExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.healthExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHealthExpression([NotNull] OverwatchCodeParser.HealthExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.healthPercentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHealthPercentExpression([NotNull] OverwatchCodeParser.HealthPercentExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.heroExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHeroExpression([NotNull] OverwatchCodeParser.HeroExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.heroIconStringExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHeroIconStringExpression([NotNull] OverwatchCodeParser.HeroIconStringExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.heroOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHeroOfExpression([NotNull] OverwatchCodeParser.HeroOfExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.horizontalAngleFromDirectionExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHorizontalAngleFromDirectionExpression([NotNull] OverwatchCodeParser.HorizontalAngleFromDirectionExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.horizontalAngleTowardsExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHorizontalAngleTowardsExpression([NotNull] OverwatchCodeParser.HorizontalAngleTowardsExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.horizontalFacingAngleOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHorizontalFacingAngleOfExpression([NotNull] OverwatchCodeParser.HorizontalFacingAngleOfExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.horizontalSpeedOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHorizontalSpeedOfExpression([NotNull] OverwatchCodeParser.HorizontalSpeedOfExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.indexOfArrayValueExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexOfArrayValueExpression([NotNull] OverwatchCodeParser.IndexOfArrayValueExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isAliveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsAliveExpression([NotNull] OverwatchCodeParser.IsAliveExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isAssemblingHeroesExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsAssemblingHeroesExpression([NotNull] OverwatchCodeParser.IsAssemblingHeroesExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isBetweenRoundsExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsBetweenRoundsExpression([NotNull] OverwatchCodeParser.IsBetweenRoundsExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isButtonHeldExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsButtonHeldExpression([NotNull] OverwatchCodeParser.IsButtonHeldExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isCommunicatingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsCommunicatingExpression([NotNull] OverwatchCodeParser.IsCommunicatingExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isCommunicatingAnyExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsCommunicatingAnyExpression([NotNull] OverwatchCodeParser.IsCommunicatingAnyExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isCommunicatingAnyEmoteExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsCommunicatingAnyEmoteExpression([NotNull] OverwatchCodeParser.IsCommunicatingAnyEmoteExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isCommunicatingAnyVoicelineExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsCommunicatingAnyVoicelineExpression([NotNull] OverwatchCodeParser.IsCommunicatingAnyVoicelineExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isControlModePointLockedExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsControlModePointLockedExpression([NotNull] OverwatchCodeParser.IsControlModePointLockedExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isCrouchingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsCrouchingExpression([NotNull] OverwatchCodeParser.IsCrouchingExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isCTFModeInSuddenDeathExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsCTFModeInSuddenDeathExpression([NotNull] OverwatchCodeParser.IsCTFModeInSuddenDeathExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isDeadExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsDeadExpression([NotNull] OverwatchCodeParser.IsDeadExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isFiringPrimaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsFiringPrimaryExpression([NotNull] OverwatchCodeParser.IsFiringPrimaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isFiringSecondaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsFiringSecondaryExpression([NotNull] OverwatchCodeParser.IsFiringSecondaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isFlagAtBaseExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsFlagAtBaseExpression([NotNull] OverwatchCodeParser.IsFlagAtBaseExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isFlagBeingCarriedExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsFlagBeingCarriedExpression([NotNull] OverwatchCodeParser.IsFlagBeingCarriedExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isGameInProgressExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsGameInProgressExpression([NotNull] OverwatchCodeParser.IsGameInProgressExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isHeroBeingPlayedExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsHeroBeingPlayedExpression([NotNull] OverwatchCodeParser.IsHeroBeingPlayedExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isInAirExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsInAirExpression([NotNull] OverwatchCodeParser.IsInAirExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isInLineofSightExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsInLineofSightExpression([NotNull] OverwatchCodeParser.IsInLineofSightExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isInSetupExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsInSetupExpression([NotNull] OverwatchCodeParser.IsInSetupExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isInSpawnRoomExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsInSpawnRoomExpression([NotNull] OverwatchCodeParser.IsInSpawnRoomExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isInViewAngleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsInViewAngleExpression([NotNull] OverwatchCodeParser.IsInViewAngleExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isMatchCompleteExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsMatchCompleteExpression([NotNull] OverwatchCodeParser.IsMatchCompleteExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isMovingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsMovingExpression([NotNull] OverwatchCodeParser.IsMovingExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isObjectiveCompleteExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsObjectiveCompleteExpression([NotNull] OverwatchCodeParser.IsObjectiveCompleteExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isOnGroundExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsOnGroundExpression([NotNull] OverwatchCodeParser.IsOnGroundExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isOnObjectiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsOnObjectiveExpression([NotNull] OverwatchCodeParser.IsOnObjectiveExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isOnWallExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsOnWallExpression([NotNull] OverwatchCodeParser.IsOnWallExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isPortraitOnFireExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsPortraitOnFireExpression([NotNull] OverwatchCodeParser.IsPortraitOnFireExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isStandingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsStandingExpression([NotNull] OverwatchCodeParser.IsStandingExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isTeamOnDefenseExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsTeamOnDefenseExpression([NotNull] OverwatchCodeParser.IsTeamOnDefenseExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isTeamOnOffenseExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsTeamOnOffenseExpression([NotNull] OverwatchCodeParser.IsTeamOnOffenseExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isTrueForAllExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsTrueForAllExpression([NotNull] OverwatchCodeParser.IsTrueForAllExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isTrueForAnyExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsTrueForAnyExpression([NotNull] OverwatchCodeParser.IsTrueForAnyExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isUsingAbility1Expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsUsingAbility1Expression([NotNull] OverwatchCodeParser.IsUsingAbility1ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isUsingAbility2Expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsUsingAbility2Expression([NotNull] OverwatchCodeParser.IsUsingAbility2ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isUsingUltimateExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsUsingUltimateExpression([NotNull] OverwatchCodeParser.IsUsingUltimateExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.isWaitingForPlayersExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsWaitingForPlayersExpression([NotNull] OverwatchCodeParser.IsWaitingForPlayersExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.lastCreatedEntityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLastCreatedEntityExpression([NotNull] OverwatchCodeParser.LastCreatedEntityExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.lastDamageModificationIDExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLastDamageModificationIDExpression([NotNull] OverwatchCodeParser.LastDamageModificationIDExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.lastDamageOverTimeIDExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLastDamageOverTimeIDExpression([NotNull] OverwatchCodeParser.LastDamageOverTimeIDExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.lastHealOverTimeIDExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLastHealOverTimeIDExpression([NotNull] OverwatchCodeParser.LastHealOverTimeIDExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.lastOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLastOfExpression([NotNull] OverwatchCodeParser.LastOfExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.lastTextIDExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLastTextIDExpression([NotNull] OverwatchCodeParser.LastTextIDExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.leftExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLeftExpression([NotNull] OverwatchCodeParser.LeftExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.localVectorOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocalVectorOfExpression([NotNull] OverwatchCodeParser.LocalVectorOfExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.matchRoundExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMatchRoundExpression([NotNull] OverwatchCodeParser.MatchRoundExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.matchTimeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMatchTimeExpression([NotNull] OverwatchCodeParser.MatchTimeExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.maxExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMaxExpression([NotNull] OverwatchCodeParser.MaxExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.maxHealthExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMaxHealthExpression([NotNull] OverwatchCodeParser.MaxHealthExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.minExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMinExpression([NotNull] OverwatchCodeParser.MinExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.moduloExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitModuloExpression([NotNull] OverwatchCodeParser.ModuloExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.multiplyExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplyExpression([NotNull] OverwatchCodeParser.MultiplyExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.nearestWalkablePositionExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNearestWalkablePositionExpression([NotNull] OverwatchCodeParser.NearestWalkablePositionExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.team"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTeam([NotNull] OverwatchCodeParser.TeamContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.playerConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPlayerConstant([NotNull] OverwatchCodeParser.PlayerConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] OverwatchCodeParser.LiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.globalVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobalVariable([NotNull] OverwatchCodeParser.GlobalVariableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.heroType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHeroType([NotNull] OverwatchCodeParser.HeroTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.reaper"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReaper([NotNull] OverwatchCodeParser.ReaperContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.tracer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTracer([NotNull] OverwatchCodeParser.TracerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.mercy"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMercy([NotNull] OverwatchCodeParser.MercyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.hanzo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHanzo([NotNull] OverwatchCodeParser.HanzoContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.torbjorn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTorbjorn([NotNull] OverwatchCodeParser.TorbjornContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.reinhardt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReinhardt([NotNull] OverwatchCodeParser.ReinhardtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.pharah"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPharah([NotNull] OverwatchCodeParser.PharahContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.winston"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWinston([NotNull] OverwatchCodeParser.WinstonContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.widowmaker"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWidowmaker([NotNull] OverwatchCodeParser.WidowmakerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.bastion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBastion([NotNull] OverwatchCodeParser.BastionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.symmetra"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSymmetra([NotNull] OverwatchCodeParser.SymmetraContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.zenyatta"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitZenyatta([NotNull] OverwatchCodeParser.ZenyattaContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.genji"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGenji([NotNull] OverwatchCodeParser.GenjiContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.roadhog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRoadhog([NotNull] OverwatchCodeParser.RoadhogContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.mcCree"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMcCree([NotNull] OverwatchCodeParser.McCreeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.junkrat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitJunkrat([NotNull] OverwatchCodeParser.JunkratContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.zarya"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitZarya([NotNull] OverwatchCodeParser.ZaryaContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.soldier76"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSoldier76([NotNull] OverwatchCodeParser.Soldier76Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.lucio"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLucio([NotNull] OverwatchCodeParser.LucioContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.dva"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDva([NotNull] OverwatchCodeParser.DvaContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.mei"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMei([NotNull] OverwatchCodeParser.MeiContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.sombra"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSombra([NotNull] OverwatchCodeParser.SombraContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.doomfist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDoomfist([NotNull] OverwatchCodeParser.DoomfistContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.ana"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAna([NotNull] OverwatchCodeParser.AnaContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.orisa"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrisa([NotNull] OverwatchCodeParser.OrisaContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.brigitte"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBrigitte([NotNull] OverwatchCodeParser.BrigitteContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.moira"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMoira([NotNull] OverwatchCodeParser.MoiraContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.wreckingBall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWreckingBall([NotNull] OverwatchCodeParser.WreckingBallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.ashe"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAshe([NotNull] OverwatchCodeParser.AsheContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.baptiste"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBaptiste([NotNull] OverwatchCodeParser.BaptisteContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.status"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatus([NotNull] OverwatchCodeParser.StatusContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.hacked"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHacked([NotNull] OverwatchCodeParser.HackedContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.burning"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBurning([NotNull] OverwatchCodeParser.BurningContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.knockedDown"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKnockedDown([NotNull] OverwatchCodeParser.KnockedDownContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.asleep"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAsleep([NotNull] OverwatchCodeParser.AsleepContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.frozen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFrozen([NotNull] OverwatchCodeParser.FrozenContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.unkillable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnkillable([NotNull] OverwatchCodeParser.UnkillableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.invincible"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInvincible([NotNull] OverwatchCodeParser.InvincibleContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.phasedOut"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPhasedOut([NotNull] OverwatchCodeParser.PhasedOutContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.rooted"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRooted([NotNull] OverwatchCodeParser.RootedContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.stunned"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStunned([NotNull] OverwatchCodeParser.StunnedContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.button"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitButton([NotNull] OverwatchCodeParser.ButtonContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.primaryFire"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryFire([NotNull] OverwatchCodeParser.PrimaryFireContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.secondaryFire"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSecondaryFire([NotNull] OverwatchCodeParser.SecondaryFireContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.ability1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAbility1([NotNull] OverwatchCodeParser.Ability1Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.ability2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAbility2([NotNull] OverwatchCodeParser.Ability2Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.ultimate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUltimate([NotNull] OverwatchCodeParser.UltimateContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.interact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInteract([NotNull] OverwatchCodeParser.InteractContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.jump"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitJump([NotNull] OverwatchCodeParser.JumpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.crouch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCrouch([NotNull] OverwatchCodeParser.CrouchContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.communicationType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommunicationType([NotNull] OverwatchCodeParser.CommunicationTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.voiceLineUp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVoiceLineUp([NotNull] OverwatchCodeParser.VoiceLineUpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.voiceLineLeft"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVoiceLineLeft([NotNull] OverwatchCodeParser.VoiceLineLeftContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.voiceLineRight"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVoiceLineRight([NotNull] OverwatchCodeParser.VoiceLineRightContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.voiceLineDown"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVoiceLineDown([NotNull] OverwatchCodeParser.VoiceLineDownContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.emoteUp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmoteUp([NotNull] OverwatchCodeParser.EmoteUpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.emoteLeft"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmoteLeft([NotNull] OverwatchCodeParser.EmoteLeftContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.emoteRight"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmoteRight([NotNull] OverwatchCodeParser.EmoteRightContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.emoteDown"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmoteDown([NotNull] OverwatchCodeParser.EmoteDownContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.ultimateStatus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUltimateStatus([NotNull] OverwatchCodeParser.UltimateStatusContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.hello"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHello([NotNull] OverwatchCodeParser.HelloContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.needHealing"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNeedHealing([NotNull] OverwatchCodeParser.NeedHealingContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.groupUp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGroupUp([NotNull] OverwatchCodeParser.GroupUpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.thanks"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThanks([NotNull] OverwatchCodeParser.ThanksContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.acknowledge"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAcknowledge([NotNull] OverwatchCodeParser.AcknowledgeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.barrierBlockType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBarrierBlockType([NotNull] OverwatchCodeParser.BarrierBlockTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.barriersDoNotBlockLOS"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBarriersDoNotBlockLOS([NotNull] OverwatchCodeParser.BarriersDoNotBlockLOSContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.enemyBarriersBlockLOS"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnemyBarriersBlockLOS([NotNull] OverwatchCodeParser.EnemyBarriersBlockLOSContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.allBarriersBlockLOS"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAllBarriersBlockLOS([NotNull] OverwatchCodeParser.AllBarriersBlockLOSContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.vectorTransformationType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVectorTransformationType([NotNull] OverwatchCodeParser.VectorTransformationTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.rotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRotation([NotNull] OverwatchCodeParser.RotationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.rotationAndTranslation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRotationAndTranslation([NotNull] OverwatchCodeParser.RotationAndTranslationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OverwatchCodeParser.binaryCompartorOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinaryCompartorOperator([NotNull] OverwatchCodeParser.BinaryCompartorOperatorContext context);
}
