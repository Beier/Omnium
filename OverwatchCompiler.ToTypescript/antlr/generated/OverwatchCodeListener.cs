//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Beier\Documents\Visual Studio 2017\Projects\OverwatchCompiler\OverwatchCompiler.ToTypescript\antlr\OverwatchCode.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="OverwatchCodeParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public interface IOverwatchCodeListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.root"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoot([NotNull] OverwatchCodeParser.RootContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.root"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoot([NotNull] OverwatchCodeParser.RootContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRule([NotNull] OverwatchCodeParser.RuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRule([NotNull] OverwatchCodeParser.RuleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.eventBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEventBlock([NotNull] OverwatchCodeParser.EventBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.eventBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEventBlock([NotNull] OverwatchCodeParser.EventBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.eventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEventType([NotNull] OverwatchCodeParser.EventTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.eventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEventType([NotNull] OverwatchCodeParser.EventTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.ongoingGlobalEventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOngoingGlobalEventType([NotNull] OverwatchCodeParser.OngoingGlobalEventTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.ongoingGlobalEventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOngoingGlobalEventType([NotNull] OverwatchCodeParser.OngoingGlobalEventTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.ongoingEachPlayerEventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOngoingEachPlayerEventType([NotNull] OverwatchCodeParser.OngoingEachPlayerEventTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.ongoingEachPlayerEventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOngoingEachPlayerEventType([NotNull] OverwatchCodeParser.OngoingEachPlayerEventTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.playerEarnedEliminationEventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlayerEarnedEliminationEventType([NotNull] OverwatchCodeParser.PlayerEarnedEliminationEventTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.playerEarnedEliminationEventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlayerEarnedEliminationEventType([NotNull] OverwatchCodeParser.PlayerEarnedEliminationEventTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.playerDealtFinalBlowEventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlayerDealtFinalBlowEventType([NotNull] OverwatchCodeParser.PlayerDealtFinalBlowEventTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.playerDealtFinalBlowEventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlayerDealtFinalBlowEventType([NotNull] OverwatchCodeParser.PlayerDealtFinalBlowEventTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.playerDealtDamageEventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlayerDealtDamageEventType([NotNull] OverwatchCodeParser.PlayerDealtDamageEventTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.playerDealtDamageEventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlayerDealtDamageEventType([NotNull] OverwatchCodeParser.PlayerDealtDamageEventTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.playerTookDamageEventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlayerTookDamageEventType([NotNull] OverwatchCodeParser.PlayerTookDamageEventTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.playerTookDamageEventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlayerTookDamageEventType([NotNull] OverwatchCodeParser.PlayerTookDamageEventTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.playerDiedEventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlayerDiedEventType([NotNull] OverwatchCodeParser.PlayerDiedEventTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.playerDiedEventType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlayerDiedEventType([NotNull] OverwatchCodeParser.PlayerDiedEventTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.conditionBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionBlock([NotNull] OverwatchCodeParser.ConditionBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.conditionBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionBlock([NotNull] OverwatchCodeParser.ConditionBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition([NotNull] OverwatchCodeParser.ConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition([NotNull] OverwatchCodeParser.ConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.actionBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterActionBlock([NotNull] OverwatchCodeParser.ActionBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.actionBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitActionBlock([NotNull] OverwatchCodeParser.ActionBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.action"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAction([NotNull] OverwatchCodeParser.ActionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.action"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAction([NotNull] OverwatchCodeParser.ActionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.setGlobalVariableAction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetGlobalVariableAction([NotNull] OverwatchCodeParser.SetGlobalVariableActionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.setGlobalVariableAction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetGlobalVariableAction([NotNull] OverwatchCodeParser.SetGlobalVariableActionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] OverwatchCodeParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] OverwatchCodeParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.vectorExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVectorExpression([NotNull] OverwatchCodeParser.VectorExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.vectorExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVectorExpression([NotNull] OverwatchCodeParser.VectorExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.addExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddExpression([NotNull] OverwatchCodeParser.AddExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.addExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddExpression([NotNull] OverwatchCodeParser.AddExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.absoluteValueExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAbsoluteValueExpression([NotNull] OverwatchCodeParser.AbsoluteValueExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.absoluteValueExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAbsoluteValueExpression([NotNull] OverwatchCodeParser.AbsoluteValueExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.allDeadPlayersExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllDeadPlayersExpression([NotNull] OverwatchCodeParser.AllDeadPlayersExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.allDeadPlayersExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllDeadPlayersExpression([NotNull] OverwatchCodeParser.AllDeadPlayersExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.allHeroesExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllHeroesExpression([NotNull] OverwatchCodeParser.AllHeroesExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.allHeroesExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllHeroesExpression([NotNull] OverwatchCodeParser.AllHeroesExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.allLivingPlayersExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllLivingPlayersExpression([NotNull] OverwatchCodeParser.AllLivingPlayersExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.allLivingPlayersExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllLivingPlayersExpression([NotNull] OverwatchCodeParser.AllLivingPlayersExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.allPlayersExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllPlayersExpression([NotNull] OverwatchCodeParser.AllPlayersExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.allPlayersExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllPlayersExpression([NotNull] OverwatchCodeParser.AllPlayersExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.allPlayersNotOnObjectiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllPlayersNotOnObjectiveExpression([NotNull] OverwatchCodeParser.AllPlayersNotOnObjectiveExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.allPlayersNotOnObjectiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllPlayersNotOnObjectiveExpression([NotNull] OverwatchCodeParser.AllPlayersNotOnObjectiveExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.allPlayersOnObjectiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllPlayersOnObjectiveExpression([NotNull] OverwatchCodeParser.AllPlayersOnObjectiveExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.allPlayersOnObjectiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllPlayersOnObjectiveExpression([NotNull] OverwatchCodeParser.AllPlayersOnObjectiveExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.allowedHeroesExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllowedHeroesExpression([NotNull] OverwatchCodeParser.AllowedHeroesExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.allowedHeroesExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllowedHeroesExpression([NotNull] OverwatchCodeParser.AllowedHeroesExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.altitudeOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAltitudeOfExpression([NotNull] OverwatchCodeParser.AltitudeOfExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.altitudeOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAltitudeOfExpression([NotNull] OverwatchCodeParser.AltitudeOfExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.eventPlayerExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEventPlayerExpression([NotNull] OverwatchCodeParser.EventPlayerExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.eventPlayerExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEventPlayerExpression([NotNull] OverwatchCodeParser.EventPlayerExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.andExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAndExpression([NotNull] OverwatchCodeParser.AndExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.andExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAndExpression([NotNull] OverwatchCodeParser.AndExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.angleDifferenceExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAngleDifferenceExpression([NotNull] OverwatchCodeParser.AngleDifferenceExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.angleDifferenceExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAngleDifferenceExpression([NotNull] OverwatchCodeParser.AngleDifferenceExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.appendToArrayExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAppendToArrayExpression([NotNull] OverwatchCodeParser.AppendToArrayExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.appendToArrayExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAppendToArrayExpression([NotNull] OverwatchCodeParser.AppendToArrayExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.arrayContainsExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayContainsExpression([NotNull] OverwatchCodeParser.ArrayContainsExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.arrayContainsExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayContainsExpression([NotNull] OverwatchCodeParser.ArrayContainsExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.arraySliceExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArraySliceExpression([NotNull] OverwatchCodeParser.ArraySliceExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.arraySliceExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArraySliceExpression([NotNull] OverwatchCodeParser.ArraySliceExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.attackerExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttackerExpression([NotNull] OverwatchCodeParser.AttackerExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.attackerExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttackerExpression([NotNull] OverwatchCodeParser.AttackerExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.backwardExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBackwardExpression([NotNull] OverwatchCodeParser.BackwardExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.backwardExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBackwardExpression([NotNull] OverwatchCodeParser.BackwardExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.closestPlayerToExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClosestPlayerToExpression([NotNull] OverwatchCodeParser.ClosestPlayerToExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.closestPlayerToExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClosestPlayerToExpression([NotNull] OverwatchCodeParser.ClosestPlayerToExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.compareExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompareExpression([NotNull] OverwatchCodeParser.CompareExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.compareExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompareExpression([NotNull] OverwatchCodeParser.CompareExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.controlModeScoringPercentageExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterControlModeScoringPercentageExpression([NotNull] OverwatchCodeParser.ControlModeScoringPercentageExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.controlModeScoringPercentageExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitControlModeScoringPercentageExpression([NotNull] OverwatchCodeParser.ControlModeScoringPercentageExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.globalVariableExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGlobalVariableExpression([NotNull] OverwatchCodeParser.GlobalVariableExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.globalVariableExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGlobalVariableExpression([NotNull] OverwatchCodeParser.GlobalVariableExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.controlModeScoringTeamExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterControlModeScoringTeamExpression([NotNull] OverwatchCodeParser.ControlModeScoringTeamExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.controlModeScoringTeamExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitControlModeScoringTeamExpression([NotNull] OverwatchCodeParser.ControlModeScoringTeamExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.cosineFromDegreesExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCosineFromDegreesExpression([NotNull] OverwatchCodeParser.CosineFromDegreesExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.cosineFromDegreesExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCosineFromDegreesExpression([NotNull] OverwatchCodeParser.CosineFromDegreesExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.cosineFromRadiansExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCosineFromRadiansExpression([NotNull] OverwatchCodeParser.CosineFromRadiansExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.cosineFromRadiansExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCosineFromRadiansExpression([NotNull] OverwatchCodeParser.CosineFromRadiansExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.countOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCountOfExpression([NotNull] OverwatchCodeParser.CountOfExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.countOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCountOfExpression([NotNull] OverwatchCodeParser.CountOfExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.crossProductExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCrossProductExpression([NotNull] OverwatchCodeParser.CrossProductExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.crossProductExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCrossProductExpression([NotNull] OverwatchCodeParser.CrossProductExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.currentArrayElementExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCurrentArrayElementExpression([NotNull] OverwatchCodeParser.CurrentArrayElementExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.currentArrayElementExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCurrentArrayElementExpression([NotNull] OverwatchCodeParser.CurrentArrayElementExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.directionFromAnglesExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDirectionFromAnglesExpression([NotNull] OverwatchCodeParser.DirectionFromAnglesExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.directionFromAnglesExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDirectionFromAnglesExpression([NotNull] OverwatchCodeParser.DirectionFromAnglesExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.directionTowardsExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDirectionTowardsExpression([NotNull] OverwatchCodeParser.DirectionTowardsExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.directionTowardsExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDirectionTowardsExpression([NotNull] OverwatchCodeParser.DirectionTowardsExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.distanceBetweenExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDistanceBetweenExpression([NotNull] OverwatchCodeParser.DistanceBetweenExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.distanceBetweenExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDistanceBetweenExpression([NotNull] OverwatchCodeParser.DistanceBetweenExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.divideExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDivideExpression([NotNull] OverwatchCodeParser.DivideExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.divideExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDivideExpression([NotNull] OverwatchCodeParser.DivideExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.dotProductExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDotProductExpression([NotNull] OverwatchCodeParser.DotProductExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.dotProductExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDotProductExpression([NotNull] OverwatchCodeParser.DotProductExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.downExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDownExpression([NotNull] OverwatchCodeParser.DownExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.downExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDownExpression([NotNull] OverwatchCodeParser.DownExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.emptyArrayExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmptyArrayExpression([NotNull] OverwatchCodeParser.EmptyArrayExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.emptyArrayExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmptyArrayExpression([NotNull] OverwatchCodeParser.EmptyArrayExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.entityExistsExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEntityExistsExpression([NotNull] OverwatchCodeParser.EntityExistsExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.entityExistsExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEntityExistsExpression([NotNull] OverwatchCodeParser.EntityExistsExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.eventDamageExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEventDamageExpression([NotNull] OverwatchCodeParser.EventDamageExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.eventDamageExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEventDamageExpression([NotNull] OverwatchCodeParser.EventDamageExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.eventWasCriticalHitExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEventWasCriticalHitExpression([NotNull] OverwatchCodeParser.EventWasCriticalHitExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.eventWasCriticalHitExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEventWasCriticalHitExpression([NotNull] OverwatchCodeParser.EventWasCriticalHitExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.eyePositionExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEyePositionExpression([NotNull] OverwatchCodeParser.EyePositionExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.eyePositionExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEyePositionExpression([NotNull] OverwatchCodeParser.EyePositionExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.facingDirectionOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFacingDirectionOfExpression([NotNull] OverwatchCodeParser.FacingDirectionOfExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.facingDirectionOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFacingDirectionOfExpression([NotNull] OverwatchCodeParser.FacingDirectionOfExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.farthestPlayerFromExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFarthestPlayerFromExpression([NotNull] OverwatchCodeParser.FarthestPlayerFromExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.farthestPlayerFromExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFarthestPlayerFromExpression([NotNull] OverwatchCodeParser.FarthestPlayerFromExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.filteredArrayExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFilteredArrayExpression([NotNull] OverwatchCodeParser.FilteredArrayExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.filteredArrayExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFilteredArrayExpression([NotNull] OverwatchCodeParser.FilteredArrayExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.firstOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFirstOfExpression([NotNull] OverwatchCodeParser.FirstOfExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.firstOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFirstOfExpression([NotNull] OverwatchCodeParser.FirstOfExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.flagPositionExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFlagPositionExpression([NotNull] OverwatchCodeParser.FlagPositionExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.flagPositionExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFlagPositionExpression([NotNull] OverwatchCodeParser.FlagPositionExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.forwardExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForwardExpression([NotNull] OverwatchCodeParser.ForwardExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.forwardExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForwardExpression([NotNull] OverwatchCodeParser.ForwardExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.hasSpawnedExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHasSpawnedExpression([NotNull] OverwatchCodeParser.HasSpawnedExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.hasSpawnedExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHasSpawnedExpression([NotNull] OverwatchCodeParser.HasSpawnedExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.hasStatusExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHasStatusExpression([NotNull] OverwatchCodeParser.HasStatusExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.hasStatusExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHasStatusExpression([NotNull] OverwatchCodeParser.HasStatusExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.healthExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHealthExpression([NotNull] OverwatchCodeParser.HealthExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.healthExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHealthExpression([NotNull] OverwatchCodeParser.HealthExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.healthPercentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHealthPercentExpression([NotNull] OverwatchCodeParser.HealthPercentExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.healthPercentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHealthPercentExpression([NotNull] OverwatchCodeParser.HealthPercentExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.heroExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHeroExpression([NotNull] OverwatchCodeParser.HeroExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.heroExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHeroExpression([NotNull] OverwatchCodeParser.HeroExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.heroIconStringExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHeroIconStringExpression([NotNull] OverwatchCodeParser.HeroIconStringExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.heroIconStringExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHeroIconStringExpression([NotNull] OverwatchCodeParser.HeroIconStringExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.heroOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHeroOfExpression([NotNull] OverwatchCodeParser.HeroOfExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.heroOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHeroOfExpression([NotNull] OverwatchCodeParser.HeroOfExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.horizontalAngleFromDirectionExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHorizontalAngleFromDirectionExpression([NotNull] OverwatchCodeParser.HorizontalAngleFromDirectionExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.horizontalAngleFromDirectionExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHorizontalAngleFromDirectionExpression([NotNull] OverwatchCodeParser.HorizontalAngleFromDirectionExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.horizontalAngleTowardsExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHorizontalAngleTowardsExpression([NotNull] OverwatchCodeParser.HorizontalAngleTowardsExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.horizontalAngleTowardsExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHorizontalAngleTowardsExpression([NotNull] OverwatchCodeParser.HorizontalAngleTowardsExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.horizontalFacingAngleOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHorizontalFacingAngleOfExpression([NotNull] OverwatchCodeParser.HorizontalFacingAngleOfExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.horizontalFacingAngleOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHorizontalFacingAngleOfExpression([NotNull] OverwatchCodeParser.HorizontalFacingAngleOfExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.horizontalSpeedOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHorizontalSpeedOfExpression([NotNull] OverwatchCodeParser.HorizontalSpeedOfExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.horizontalSpeedOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHorizontalSpeedOfExpression([NotNull] OverwatchCodeParser.HorizontalSpeedOfExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.indexOfArrayValueExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexOfArrayValueExpression([NotNull] OverwatchCodeParser.IndexOfArrayValueExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.indexOfArrayValueExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexOfArrayValueExpression([NotNull] OverwatchCodeParser.IndexOfArrayValueExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isAliveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsAliveExpression([NotNull] OverwatchCodeParser.IsAliveExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isAliveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsAliveExpression([NotNull] OverwatchCodeParser.IsAliveExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isAssemblingHeroesExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsAssemblingHeroesExpression([NotNull] OverwatchCodeParser.IsAssemblingHeroesExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isAssemblingHeroesExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsAssemblingHeroesExpression([NotNull] OverwatchCodeParser.IsAssemblingHeroesExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isBetweenRoundsExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsBetweenRoundsExpression([NotNull] OverwatchCodeParser.IsBetweenRoundsExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isBetweenRoundsExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsBetweenRoundsExpression([NotNull] OverwatchCodeParser.IsBetweenRoundsExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isButtonHeldExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsButtonHeldExpression([NotNull] OverwatchCodeParser.IsButtonHeldExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isButtonHeldExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsButtonHeldExpression([NotNull] OverwatchCodeParser.IsButtonHeldExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isCommunicatingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsCommunicatingExpression([NotNull] OverwatchCodeParser.IsCommunicatingExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isCommunicatingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsCommunicatingExpression([NotNull] OverwatchCodeParser.IsCommunicatingExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isCommunicatingAnyExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsCommunicatingAnyExpression([NotNull] OverwatchCodeParser.IsCommunicatingAnyExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isCommunicatingAnyExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsCommunicatingAnyExpression([NotNull] OverwatchCodeParser.IsCommunicatingAnyExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isCommunicatingAnyEmoteExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsCommunicatingAnyEmoteExpression([NotNull] OverwatchCodeParser.IsCommunicatingAnyEmoteExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isCommunicatingAnyEmoteExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsCommunicatingAnyEmoteExpression([NotNull] OverwatchCodeParser.IsCommunicatingAnyEmoteExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isCommunicatingAnyVoicelineExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsCommunicatingAnyVoicelineExpression([NotNull] OverwatchCodeParser.IsCommunicatingAnyVoicelineExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isCommunicatingAnyVoicelineExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsCommunicatingAnyVoicelineExpression([NotNull] OverwatchCodeParser.IsCommunicatingAnyVoicelineExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isControlModePointLockedExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsControlModePointLockedExpression([NotNull] OverwatchCodeParser.IsControlModePointLockedExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isControlModePointLockedExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsControlModePointLockedExpression([NotNull] OverwatchCodeParser.IsControlModePointLockedExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isCrouchingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsCrouchingExpression([NotNull] OverwatchCodeParser.IsCrouchingExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isCrouchingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsCrouchingExpression([NotNull] OverwatchCodeParser.IsCrouchingExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isCTFModeInSuddenDeathExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsCTFModeInSuddenDeathExpression([NotNull] OverwatchCodeParser.IsCTFModeInSuddenDeathExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isCTFModeInSuddenDeathExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsCTFModeInSuddenDeathExpression([NotNull] OverwatchCodeParser.IsCTFModeInSuddenDeathExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isDeadExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsDeadExpression([NotNull] OverwatchCodeParser.IsDeadExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isDeadExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsDeadExpression([NotNull] OverwatchCodeParser.IsDeadExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isFiringPrimaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsFiringPrimaryExpression([NotNull] OverwatchCodeParser.IsFiringPrimaryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isFiringPrimaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsFiringPrimaryExpression([NotNull] OverwatchCodeParser.IsFiringPrimaryExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isFiringSecondaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsFiringSecondaryExpression([NotNull] OverwatchCodeParser.IsFiringSecondaryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isFiringSecondaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsFiringSecondaryExpression([NotNull] OverwatchCodeParser.IsFiringSecondaryExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isFlagAtBaseExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsFlagAtBaseExpression([NotNull] OverwatchCodeParser.IsFlagAtBaseExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isFlagAtBaseExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsFlagAtBaseExpression([NotNull] OverwatchCodeParser.IsFlagAtBaseExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isFlagBeingCarriedExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsFlagBeingCarriedExpression([NotNull] OverwatchCodeParser.IsFlagBeingCarriedExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isFlagBeingCarriedExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsFlagBeingCarriedExpression([NotNull] OverwatchCodeParser.IsFlagBeingCarriedExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isGameInProgressExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsGameInProgressExpression([NotNull] OverwatchCodeParser.IsGameInProgressExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isGameInProgressExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsGameInProgressExpression([NotNull] OverwatchCodeParser.IsGameInProgressExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isHeroBeingPlayedExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsHeroBeingPlayedExpression([NotNull] OverwatchCodeParser.IsHeroBeingPlayedExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isHeroBeingPlayedExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsHeroBeingPlayedExpression([NotNull] OverwatchCodeParser.IsHeroBeingPlayedExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isInAirExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsInAirExpression([NotNull] OverwatchCodeParser.IsInAirExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isInAirExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsInAirExpression([NotNull] OverwatchCodeParser.IsInAirExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isInLineofSightExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsInLineofSightExpression([NotNull] OverwatchCodeParser.IsInLineofSightExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isInLineofSightExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsInLineofSightExpression([NotNull] OverwatchCodeParser.IsInLineofSightExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isInSetupExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsInSetupExpression([NotNull] OverwatchCodeParser.IsInSetupExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isInSetupExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsInSetupExpression([NotNull] OverwatchCodeParser.IsInSetupExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isInSpawnRoomExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsInSpawnRoomExpression([NotNull] OverwatchCodeParser.IsInSpawnRoomExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isInSpawnRoomExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsInSpawnRoomExpression([NotNull] OverwatchCodeParser.IsInSpawnRoomExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isInViewAngleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsInViewAngleExpression([NotNull] OverwatchCodeParser.IsInViewAngleExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isInViewAngleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsInViewAngleExpression([NotNull] OverwatchCodeParser.IsInViewAngleExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isMatchCompleteExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsMatchCompleteExpression([NotNull] OverwatchCodeParser.IsMatchCompleteExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isMatchCompleteExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsMatchCompleteExpression([NotNull] OverwatchCodeParser.IsMatchCompleteExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isMovingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsMovingExpression([NotNull] OverwatchCodeParser.IsMovingExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isMovingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsMovingExpression([NotNull] OverwatchCodeParser.IsMovingExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isObjectiveCompleteExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsObjectiveCompleteExpression([NotNull] OverwatchCodeParser.IsObjectiveCompleteExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isObjectiveCompleteExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsObjectiveCompleteExpression([NotNull] OverwatchCodeParser.IsObjectiveCompleteExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isOnGroundExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsOnGroundExpression([NotNull] OverwatchCodeParser.IsOnGroundExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isOnGroundExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsOnGroundExpression([NotNull] OverwatchCodeParser.IsOnGroundExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isOnObjectiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsOnObjectiveExpression([NotNull] OverwatchCodeParser.IsOnObjectiveExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isOnObjectiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsOnObjectiveExpression([NotNull] OverwatchCodeParser.IsOnObjectiveExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isOnWallExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsOnWallExpression([NotNull] OverwatchCodeParser.IsOnWallExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isOnWallExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsOnWallExpression([NotNull] OverwatchCodeParser.IsOnWallExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isPortraitOnFireExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsPortraitOnFireExpression([NotNull] OverwatchCodeParser.IsPortraitOnFireExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isPortraitOnFireExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsPortraitOnFireExpression([NotNull] OverwatchCodeParser.IsPortraitOnFireExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isStandingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsStandingExpression([NotNull] OverwatchCodeParser.IsStandingExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isStandingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsStandingExpression([NotNull] OverwatchCodeParser.IsStandingExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isTeamOnDefenseExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsTeamOnDefenseExpression([NotNull] OverwatchCodeParser.IsTeamOnDefenseExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isTeamOnDefenseExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsTeamOnDefenseExpression([NotNull] OverwatchCodeParser.IsTeamOnDefenseExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isTeamOnOffenseExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsTeamOnOffenseExpression([NotNull] OverwatchCodeParser.IsTeamOnOffenseExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isTeamOnOffenseExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsTeamOnOffenseExpression([NotNull] OverwatchCodeParser.IsTeamOnOffenseExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isTrueForAllExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsTrueForAllExpression([NotNull] OverwatchCodeParser.IsTrueForAllExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isTrueForAllExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsTrueForAllExpression([NotNull] OverwatchCodeParser.IsTrueForAllExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isTrueForAnyExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsTrueForAnyExpression([NotNull] OverwatchCodeParser.IsTrueForAnyExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isTrueForAnyExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsTrueForAnyExpression([NotNull] OverwatchCodeParser.IsTrueForAnyExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isUsingAbility1Expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsUsingAbility1Expression([NotNull] OverwatchCodeParser.IsUsingAbility1ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isUsingAbility1Expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsUsingAbility1Expression([NotNull] OverwatchCodeParser.IsUsingAbility1ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isUsingAbility2Expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsUsingAbility2Expression([NotNull] OverwatchCodeParser.IsUsingAbility2ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isUsingAbility2Expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsUsingAbility2Expression([NotNull] OverwatchCodeParser.IsUsingAbility2ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isUsingUltimateExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsUsingUltimateExpression([NotNull] OverwatchCodeParser.IsUsingUltimateExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isUsingUltimateExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsUsingUltimateExpression([NotNull] OverwatchCodeParser.IsUsingUltimateExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.isWaitingForPlayersExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsWaitingForPlayersExpression([NotNull] OverwatchCodeParser.IsWaitingForPlayersExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.isWaitingForPlayersExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsWaitingForPlayersExpression([NotNull] OverwatchCodeParser.IsWaitingForPlayersExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.lastCreatedEntityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLastCreatedEntityExpression([NotNull] OverwatchCodeParser.LastCreatedEntityExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.lastCreatedEntityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLastCreatedEntityExpression([NotNull] OverwatchCodeParser.LastCreatedEntityExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.lastDamageModificationIDExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLastDamageModificationIDExpression([NotNull] OverwatchCodeParser.LastDamageModificationIDExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.lastDamageModificationIDExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLastDamageModificationIDExpression([NotNull] OverwatchCodeParser.LastDamageModificationIDExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.lastDamageOverTimeIDExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLastDamageOverTimeIDExpression([NotNull] OverwatchCodeParser.LastDamageOverTimeIDExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.lastDamageOverTimeIDExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLastDamageOverTimeIDExpression([NotNull] OverwatchCodeParser.LastDamageOverTimeIDExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.lastHealOverTimeIDExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLastHealOverTimeIDExpression([NotNull] OverwatchCodeParser.LastHealOverTimeIDExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.lastHealOverTimeIDExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLastHealOverTimeIDExpression([NotNull] OverwatchCodeParser.LastHealOverTimeIDExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.lastOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLastOfExpression([NotNull] OverwatchCodeParser.LastOfExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.lastOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLastOfExpression([NotNull] OverwatchCodeParser.LastOfExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.lastTextIDExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLastTextIDExpression([NotNull] OverwatchCodeParser.LastTextIDExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.lastTextIDExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLastTextIDExpression([NotNull] OverwatchCodeParser.LastTextIDExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.leftExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLeftExpression([NotNull] OverwatchCodeParser.LeftExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.leftExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLeftExpression([NotNull] OverwatchCodeParser.LeftExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.localVectorOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocalVectorOfExpression([NotNull] OverwatchCodeParser.LocalVectorOfExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.localVectorOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocalVectorOfExpression([NotNull] OverwatchCodeParser.LocalVectorOfExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.matchRoundExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMatchRoundExpression([NotNull] OverwatchCodeParser.MatchRoundExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.matchRoundExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMatchRoundExpression([NotNull] OverwatchCodeParser.MatchRoundExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.matchTimeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMatchTimeExpression([NotNull] OverwatchCodeParser.MatchTimeExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.matchTimeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMatchTimeExpression([NotNull] OverwatchCodeParser.MatchTimeExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.maxExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMaxExpression([NotNull] OverwatchCodeParser.MaxExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.maxExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMaxExpression([NotNull] OverwatchCodeParser.MaxExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.maxHealthExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMaxHealthExpression([NotNull] OverwatchCodeParser.MaxHealthExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.maxHealthExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMaxHealthExpression([NotNull] OverwatchCodeParser.MaxHealthExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.minExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMinExpression([NotNull] OverwatchCodeParser.MinExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.minExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMinExpression([NotNull] OverwatchCodeParser.MinExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.moduloExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuloExpression([NotNull] OverwatchCodeParser.ModuloExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.moduloExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuloExpression([NotNull] OverwatchCodeParser.ModuloExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.multiplyExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplyExpression([NotNull] OverwatchCodeParser.MultiplyExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.multiplyExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplyExpression([NotNull] OverwatchCodeParser.MultiplyExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.nearestWalkablePositionExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNearestWalkablePositionExpression([NotNull] OverwatchCodeParser.NearestWalkablePositionExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.nearestWalkablePositionExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNearestWalkablePositionExpression([NotNull] OverwatchCodeParser.NearestWalkablePositionExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.team"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTeam([NotNull] OverwatchCodeParser.TeamContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.team"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTeam([NotNull] OverwatchCodeParser.TeamContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.playerConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlayerConstant([NotNull] OverwatchCodeParser.PlayerConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.playerConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlayerConstant([NotNull] OverwatchCodeParser.PlayerConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] OverwatchCodeParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] OverwatchCodeParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.globalVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGlobalVariable([NotNull] OverwatchCodeParser.GlobalVariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.globalVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGlobalVariable([NotNull] OverwatchCodeParser.GlobalVariableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.heroType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHeroType([NotNull] OverwatchCodeParser.HeroTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.heroType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHeroType([NotNull] OverwatchCodeParser.HeroTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.reaper"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReaper([NotNull] OverwatchCodeParser.ReaperContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.reaper"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReaper([NotNull] OverwatchCodeParser.ReaperContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.tracer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTracer([NotNull] OverwatchCodeParser.TracerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.tracer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTracer([NotNull] OverwatchCodeParser.TracerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.mercy"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMercy([NotNull] OverwatchCodeParser.MercyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.mercy"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMercy([NotNull] OverwatchCodeParser.MercyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.hanzo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHanzo([NotNull] OverwatchCodeParser.HanzoContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.hanzo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHanzo([NotNull] OverwatchCodeParser.HanzoContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.torbjorn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTorbjorn([NotNull] OverwatchCodeParser.TorbjornContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.torbjorn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTorbjorn([NotNull] OverwatchCodeParser.TorbjornContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.reinhardt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReinhardt([NotNull] OverwatchCodeParser.ReinhardtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.reinhardt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReinhardt([NotNull] OverwatchCodeParser.ReinhardtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.pharah"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPharah([NotNull] OverwatchCodeParser.PharahContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.pharah"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPharah([NotNull] OverwatchCodeParser.PharahContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.winston"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWinston([NotNull] OverwatchCodeParser.WinstonContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.winston"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWinston([NotNull] OverwatchCodeParser.WinstonContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.widowmaker"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWidowmaker([NotNull] OverwatchCodeParser.WidowmakerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.widowmaker"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWidowmaker([NotNull] OverwatchCodeParser.WidowmakerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.bastion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBastion([NotNull] OverwatchCodeParser.BastionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.bastion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBastion([NotNull] OverwatchCodeParser.BastionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.symmetra"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSymmetra([NotNull] OverwatchCodeParser.SymmetraContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.symmetra"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSymmetra([NotNull] OverwatchCodeParser.SymmetraContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.zenyatta"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterZenyatta([NotNull] OverwatchCodeParser.ZenyattaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.zenyatta"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitZenyatta([NotNull] OverwatchCodeParser.ZenyattaContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.genji"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenji([NotNull] OverwatchCodeParser.GenjiContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.genji"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenji([NotNull] OverwatchCodeParser.GenjiContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.roadhog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoadhog([NotNull] OverwatchCodeParser.RoadhogContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.roadhog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoadhog([NotNull] OverwatchCodeParser.RoadhogContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.mcCree"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMcCree([NotNull] OverwatchCodeParser.McCreeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.mcCree"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMcCree([NotNull] OverwatchCodeParser.McCreeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.junkrat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJunkrat([NotNull] OverwatchCodeParser.JunkratContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.junkrat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJunkrat([NotNull] OverwatchCodeParser.JunkratContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.zarya"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterZarya([NotNull] OverwatchCodeParser.ZaryaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.zarya"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitZarya([NotNull] OverwatchCodeParser.ZaryaContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.soldier76"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSoldier76([NotNull] OverwatchCodeParser.Soldier76Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.soldier76"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSoldier76([NotNull] OverwatchCodeParser.Soldier76Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.lucio"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLucio([NotNull] OverwatchCodeParser.LucioContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.lucio"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLucio([NotNull] OverwatchCodeParser.LucioContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.dva"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDva([NotNull] OverwatchCodeParser.DvaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.dva"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDva([NotNull] OverwatchCodeParser.DvaContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.mei"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMei([NotNull] OverwatchCodeParser.MeiContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.mei"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMei([NotNull] OverwatchCodeParser.MeiContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.sombra"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSombra([NotNull] OverwatchCodeParser.SombraContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.sombra"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSombra([NotNull] OverwatchCodeParser.SombraContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.doomfist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDoomfist([NotNull] OverwatchCodeParser.DoomfistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.doomfist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDoomfist([NotNull] OverwatchCodeParser.DoomfistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.ana"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAna([NotNull] OverwatchCodeParser.AnaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.ana"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAna([NotNull] OverwatchCodeParser.AnaContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.orisa"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrisa([NotNull] OverwatchCodeParser.OrisaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.orisa"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrisa([NotNull] OverwatchCodeParser.OrisaContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.brigitte"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBrigitte([NotNull] OverwatchCodeParser.BrigitteContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.brigitte"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBrigitte([NotNull] OverwatchCodeParser.BrigitteContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.moira"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMoira([NotNull] OverwatchCodeParser.MoiraContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.moira"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMoira([NotNull] OverwatchCodeParser.MoiraContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.wreckingBall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWreckingBall([NotNull] OverwatchCodeParser.WreckingBallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.wreckingBall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWreckingBall([NotNull] OverwatchCodeParser.WreckingBallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.ashe"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAshe([NotNull] OverwatchCodeParser.AsheContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.ashe"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAshe([NotNull] OverwatchCodeParser.AsheContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.baptiste"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBaptiste([NotNull] OverwatchCodeParser.BaptisteContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.baptiste"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBaptiste([NotNull] OverwatchCodeParser.BaptisteContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.status"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatus([NotNull] OverwatchCodeParser.StatusContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.status"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatus([NotNull] OverwatchCodeParser.StatusContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.hacked"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHacked([NotNull] OverwatchCodeParser.HackedContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.hacked"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHacked([NotNull] OverwatchCodeParser.HackedContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.burning"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBurning([NotNull] OverwatchCodeParser.BurningContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.burning"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBurning([NotNull] OverwatchCodeParser.BurningContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.knockedDown"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKnockedDown([NotNull] OverwatchCodeParser.KnockedDownContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.knockedDown"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKnockedDown([NotNull] OverwatchCodeParser.KnockedDownContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.asleep"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsleep([NotNull] OverwatchCodeParser.AsleepContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.asleep"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsleep([NotNull] OverwatchCodeParser.AsleepContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.frozen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFrozen([NotNull] OverwatchCodeParser.FrozenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.frozen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFrozen([NotNull] OverwatchCodeParser.FrozenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.unkillable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnkillable([NotNull] OverwatchCodeParser.UnkillableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.unkillable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnkillable([NotNull] OverwatchCodeParser.UnkillableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.invincible"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInvincible([NotNull] OverwatchCodeParser.InvincibleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.invincible"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInvincible([NotNull] OverwatchCodeParser.InvincibleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.phasedOut"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPhasedOut([NotNull] OverwatchCodeParser.PhasedOutContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.phasedOut"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPhasedOut([NotNull] OverwatchCodeParser.PhasedOutContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.rooted"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRooted([NotNull] OverwatchCodeParser.RootedContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.rooted"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRooted([NotNull] OverwatchCodeParser.RootedContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.stunned"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStunned([NotNull] OverwatchCodeParser.StunnedContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.stunned"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStunned([NotNull] OverwatchCodeParser.StunnedContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.button"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterButton([NotNull] OverwatchCodeParser.ButtonContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.button"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitButton([NotNull] OverwatchCodeParser.ButtonContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.primaryFire"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimaryFire([NotNull] OverwatchCodeParser.PrimaryFireContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.primaryFire"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimaryFire([NotNull] OverwatchCodeParser.PrimaryFireContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.secondaryFire"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSecondaryFire([NotNull] OverwatchCodeParser.SecondaryFireContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.secondaryFire"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSecondaryFire([NotNull] OverwatchCodeParser.SecondaryFireContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.ability1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAbility1([NotNull] OverwatchCodeParser.Ability1Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.ability1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAbility1([NotNull] OverwatchCodeParser.Ability1Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.ability2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAbility2([NotNull] OverwatchCodeParser.Ability2Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.ability2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAbility2([NotNull] OverwatchCodeParser.Ability2Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.ultimate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUltimate([NotNull] OverwatchCodeParser.UltimateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.ultimate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUltimate([NotNull] OverwatchCodeParser.UltimateContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.interact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInteract([NotNull] OverwatchCodeParser.InteractContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.interact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInteract([NotNull] OverwatchCodeParser.InteractContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.jump"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJump([NotNull] OverwatchCodeParser.JumpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.jump"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJump([NotNull] OverwatchCodeParser.JumpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.crouch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCrouch([NotNull] OverwatchCodeParser.CrouchContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.crouch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCrouch([NotNull] OverwatchCodeParser.CrouchContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.communicationType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommunicationType([NotNull] OverwatchCodeParser.CommunicationTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.communicationType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommunicationType([NotNull] OverwatchCodeParser.CommunicationTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.voiceLineUp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVoiceLineUp([NotNull] OverwatchCodeParser.VoiceLineUpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.voiceLineUp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVoiceLineUp([NotNull] OverwatchCodeParser.VoiceLineUpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.voiceLineLeft"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVoiceLineLeft([NotNull] OverwatchCodeParser.VoiceLineLeftContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.voiceLineLeft"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVoiceLineLeft([NotNull] OverwatchCodeParser.VoiceLineLeftContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.voiceLineRight"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVoiceLineRight([NotNull] OverwatchCodeParser.VoiceLineRightContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.voiceLineRight"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVoiceLineRight([NotNull] OverwatchCodeParser.VoiceLineRightContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.voiceLineDown"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVoiceLineDown([NotNull] OverwatchCodeParser.VoiceLineDownContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.voiceLineDown"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVoiceLineDown([NotNull] OverwatchCodeParser.VoiceLineDownContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.emoteUp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmoteUp([NotNull] OverwatchCodeParser.EmoteUpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.emoteUp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmoteUp([NotNull] OverwatchCodeParser.EmoteUpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.emoteLeft"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmoteLeft([NotNull] OverwatchCodeParser.EmoteLeftContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.emoteLeft"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmoteLeft([NotNull] OverwatchCodeParser.EmoteLeftContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.emoteRight"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmoteRight([NotNull] OverwatchCodeParser.EmoteRightContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.emoteRight"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmoteRight([NotNull] OverwatchCodeParser.EmoteRightContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.emoteDown"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmoteDown([NotNull] OverwatchCodeParser.EmoteDownContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.emoteDown"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmoteDown([NotNull] OverwatchCodeParser.EmoteDownContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.ultimateStatus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUltimateStatus([NotNull] OverwatchCodeParser.UltimateStatusContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.ultimateStatus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUltimateStatus([NotNull] OverwatchCodeParser.UltimateStatusContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.hello"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHello([NotNull] OverwatchCodeParser.HelloContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.hello"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHello([NotNull] OverwatchCodeParser.HelloContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.needHealing"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNeedHealing([NotNull] OverwatchCodeParser.NeedHealingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.needHealing"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNeedHealing([NotNull] OverwatchCodeParser.NeedHealingContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.groupUp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroupUp([NotNull] OverwatchCodeParser.GroupUpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.groupUp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroupUp([NotNull] OverwatchCodeParser.GroupUpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.thanks"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterThanks([NotNull] OverwatchCodeParser.ThanksContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.thanks"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitThanks([NotNull] OverwatchCodeParser.ThanksContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.acknowledge"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAcknowledge([NotNull] OverwatchCodeParser.AcknowledgeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.acknowledge"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAcknowledge([NotNull] OverwatchCodeParser.AcknowledgeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.barrierBlockType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBarrierBlockType([NotNull] OverwatchCodeParser.BarrierBlockTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.barrierBlockType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBarrierBlockType([NotNull] OverwatchCodeParser.BarrierBlockTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.barriersDoNotBlockLOS"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBarriersDoNotBlockLOS([NotNull] OverwatchCodeParser.BarriersDoNotBlockLOSContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.barriersDoNotBlockLOS"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBarriersDoNotBlockLOS([NotNull] OverwatchCodeParser.BarriersDoNotBlockLOSContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.enemyBarriersBlockLOS"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnemyBarriersBlockLOS([NotNull] OverwatchCodeParser.EnemyBarriersBlockLOSContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.enemyBarriersBlockLOS"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnemyBarriersBlockLOS([NotNull] OverwatchCodeParser.EnemyBarriersBlockLOSContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.allBarriersBlockLOS"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllBarriersBlockLOS([NotNull] OverwatchCodeParser.AllBarriersBlockLOSContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.allBarriersBlockLOS"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllBarriersBlockLOS([NotNull] OverwatchCodeParser.AllBarriersBlockLOSContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.vectorTransformationType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVectorTransformationType([NotNull] OverwatchCodeParser.VectorTransformationTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.vectorTransformationType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVectorTransformationType([NotNull] OverwatchCodeParser.VectorTransformationTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.rotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRotation([NotNull] OverwatchCodeParser.RotationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.rotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRotation([NotNull] OverwatchCodeParser.RotationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.rotationAndTranslation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRotationAndTranslation([NotNull] OverwatchCodeParser.RotationAndTranslationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.rotationAndTranslation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRotationAndTranslation([NotNull] OverwatchCodeParser.RotationAndTranslationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OverwatchCodeParser.binaryCompartorOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinaryCompartorOperator([NotNull] OverwatchCodeParser.BinaryCompartorOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OverwatchCodeParser.binaryCompartorOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinaryCompartorOperator([NotNull] OverwatchCodeParser.BinaryCompartorOperatorContext context);
}
