//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from TypescriptParser.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ITypescriptParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public partial class TypescriptParserBaseListener : ITypescriptParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.sourceFiles"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSourceFiles([NotNull] TypescriptParser.SourceFilesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.sourceFiles"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSourceFiles([NotNull] TypescriptParser.SourceFilesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.sourceFile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSourceFile([NotNull] TypescriptParser.SourceFileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.sourceFile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSourceFile([NotNull] TypescriptParser.SourceFileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.importDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportDeclaration([NotNull] TypescriptParser.ImportDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.importDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportDeclaration([NotNull] TypescriptParser.ImportDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.moduleOrTypeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleOrTypeName([NotNull] TypescriptParser.ModuleOrTypeNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.moduleOrTypeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleOrTypeName([NotNull] TypescriptParser.ModuleOrTypeNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.typeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeList([NotNull] TypescriptParser.TypeListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.typeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeList([NotNull] TypescriptParser.TypeListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] TypescriptParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] TypescriptParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.baseType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBaseType([NotNull] TypescriptParser.BaseTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.baseType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBaseType([NotNull] TypescriptParser.BaseTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.primitiveType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveType([NotNull] TypescriptParser.PrimitiveTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.primitiveType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveType([NotNull] TypescriptParser.PrimitiveTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.classType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassType([NotNull] TypescriptParser.ClassTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.classType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassType([NotNull] TypescriptParser.ClassTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.typeArgumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeArgumentList([NotNull] TypescriptParser.TypeArgumentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.typeArgumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeArgumentList([NotNull] TypescriptParser.TypeArgumentListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.functionType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionType([NotNull] TypescriptParser.FunctionTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.functionType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionType([NotNull] TypescriptParser.FunctionTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.argumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgumentList([NotNull] TypescriptParser.ArgumentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.argumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgumentList([NotNull] TypescriptParser.ArgumentListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgument([NotNull] TypescriptParser.ArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgument([NotNull] TypescriptParser.ArgumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] TypescriptParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] TypescriptParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.nonAssignmentExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNonAssignmentExpression([NotNull] TypescriptParser.NonAssignmentExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.nonAssignmentExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNonAssignmentExpression([NotNull] TypescriptParser.NonAssignmentExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] TypescriptParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] TypescriptParser.AssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.assignmentOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentOperator([NotNull] TypescriptParser.AssignmentOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.assignmentOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentOperator([NotNull] TypescriptParser.AssignmentOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.conditionalOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionalOrExpression([NotNull] TypescriptParser.ConditionalOrExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.conditionalOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionalOrExpression([NotNull] TypescriptParser.ConditionalOrExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.conditionalAndExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionalAndExpression([NotNull] TypescriptParser.ConditionalAndExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.conditionalAndExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionalAndExpression([NotNull] TypescriptParser.ConditionalAndExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.inclusiveOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInclusiveOrExpression([NotNull] TypescriptParser.InclusiveOrExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.inclusiveOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInclusiveOrExpression([NotNull] TypescriptParser.InclusiveOrExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.exclusiveOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExclusiveOrExpression([NotNull] TypescriptParser.ExclusiveOrExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.exclusiveOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExclusiveOrExpression([NotNull] TypescriptParser.ExclusiveOrExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.andExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAndExpression([NotNull] TypescriptParser.AndExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.andExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAndExpression([NotNull] TypescriptParser.AndExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.equalityExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqualityExpression([NotNull] TypescriptParser.EqualityExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.equalityExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqualityExpression([NotNull] TypescriptParser.EqualityExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.castExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCastExpression([NotNull] TypescriptParser.CastExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.castExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCastExpression([NotNull] TypescriptParser.CastExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.relationalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationalExpression([NotNull] TypescriptParser.RelationalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.relationalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationalExpression([NotNull] TypescriptParser.RelationalExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.shiftExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShiftExpression([NotNull] TypescriptParser.ShiftExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.shiftExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShiftExpression([NotNull] TypescriptParser.ShiftExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.additiveExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditiveExpression([NotNull] TypescriptParser.AdditiveExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.additiveExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditiveExpression([NotNull] TypescriptParser.AdditiveExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.multiplicativeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicativeExpression([NotNull] TypescriptParser.MultiplicativeExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.multiplicativeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicativeExpression([NotNull] TypescriptParser.MultiplicativeExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.unaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpression([NotNull] TypescriptParser.UnaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.unaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpression([NotNull] TypescriptParser.UnaryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.primaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimaryExpression([NotNull] TypescriptParser.PrimaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.primaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimaryExpression([NotNull] TypescriptParser.PrimaryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.nativeMethodInvocationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNativeMethodInvocationStatement([NotNull] TypescriptParser.NativeMethodInvocationStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.nativeMethodInvocationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNativeMethodInvocationStatement([NotNull] TypescriptParser.NativeMethodInvocationStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>literalExpression</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralExpression([NotNull] TypescriptParser.LiteralExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>literalExpression</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralExpression([NotNull] TypescriptParser.LiteralExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleNameExpression</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleNameExpression([NotNull] TypescriptParser.SimpleNameExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleNameExpression</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleNameExpression([NotNull] TypescriptParser.SimpleNameExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesisExpressions</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesisExpressions([NotNull] TypescriptParser.ParenthesisExpressionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesisExpressions</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesisExpressions([NotNull] TypescriptParser.ParenthesisExpressionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>thisReferenceExpression</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThisReferenceExpression([NotNull] TypescriptParser.ThisReferenceExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>thisReferenceExpression</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThisReferenceExpression([NotNull] TypescriptParser.ThisReferenceExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>objectCreation</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectCreation([NotNull] TypescriptParser.ObjectCreationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>objectCreation</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectCreation([NotNull] TypescriptParser.ObjectCreationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>arrayCreationExpression</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayCreationExpression([NotNull] TypescriptParser.ArrayCreationExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>arrayCreationExpression</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayCreationExpression([NotNull] TypescriptParser.ArrayCreationExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionList([NotNull] TypescriptParser.ExpressionListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionList([NotNull] TypescriptParser.ExpressionListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.memberAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberAccess([NotNull] TypescriptParser.MemberAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.memberAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberAccess([NotNull] TypescriptParser.MemberAccessContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.bracketExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBracketExpression([NotNull] TypescriptParser.BracketExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.bracketExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBracketExpression([NotNull] TypescriptParser.BracketExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.lambdaExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLambdaExpression([NotNull] TypescriptParser.LambdaExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.lambdaExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLambdaExpression([NotNull] TypescriptParser.LambdaExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.anonymousFunctionSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnonymousFunctionSignature([NotNull] TypescriptParser.AnonymousFunctionSignatureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.anonymousFunctionSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnonymousFunctionSignature([NotNull] TypescriptParser.AnonymousFunctionSignatureContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.explicitAnonymousFunctionParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExplicitAnonymousFunctionParameterList([NotNull] TypescriptParser.ExplicitAnonymousFunctionParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.explicitAnonymousFunctionParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExplicitAnonymousFunctionParameterList([NotNull] TypescriptParser.ExplicitAnonymousFunctionParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.explicitAnonymousFunctionParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExplicitAnonymousFunctionParameter([NotNull] TypescriptParser.ExplicitAnonymousFunctionParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.explicitAnonymousFunctionParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExplicitAnonymousFunctionParameter([NotNull] TypescriptParser.ExplicitAnonymousFunctionParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.implicitAnonymousFunctionParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImplicitAnonymousFunctionParameterList([NotNull] TypescriptParser.ImplicitAnonymousFunctionParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.implicitAnonymousFunctionParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImplicitAnonymousFunctionParameterList([NotNull] TypescriptParser.ImplicitAnonymousFunctionParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.anonymousFunctionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnonymousFunctionBody([NotNull] TypescriptParser.AnonymousFunctionBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.anonymousFunctionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnonymousFunctionBody([NotNull] TypescriptParser.AnonymousFunctionBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>declarationStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclarationStatement([NotNull] TypescriptParser.DeclarationStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>declarationStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclarationStatement([NotNull] TypescriptParser.DeclarationStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>embedded</c>
	/// labeled alternative in <see cref="TypescriptParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmbedded([NotNull] TypescriptParser.EmbeddedContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>embedded</c>
	/// labeled alternative in <see cref="TypescriptParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmbedded([NotNull] TypescriptParser.EmbeddedContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.embeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmbeddedStatement([NotNull] TypescriptParser.EmbeddedStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.embeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmbeddedStatement([NotNull] TypescriptParser.EmbeddedStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>emptyStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmptyStatement([NotNull] TypescriptParser.EmptyStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>emptyStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmptyStatement([NotNull] TypescriptParser.EmptyStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expressionStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionStatement([NotNull] TypescriptParser.ExpressionStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expressionStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionStatement([NotNull] TypescriptParser.ExpressionStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ifStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] TypescriptParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ifStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] TypescriptParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>switchStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchStatement([NotNull] TypescriptParser.SwitchStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>switchStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchStatement([NotNull] TypescriptParser.SwitchStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>whileStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatement([NotNull] TypescriptParser.WhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>whileStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatement([NotNull] TypescriptParser.WhileStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>forStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStatement([NotNull] TypescriptParser.ForStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>forStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStatement([NotNull] TypescriptParser.ForStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>foreachStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForeachStatement([NotNull] TypescriptParser.ForeachStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>foreachStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForeachStatement([NotNull] TypescriptParser.ForeachStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>breakStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreakStatement([NotNull] TypescriptParser.BreakStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>breakStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreakStatement([NotNull] TypescriptParser.BreakStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>continueStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContinueStatement([NotNull] TypescriptParser.ContinueStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>continueStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContinueStatement([NotNull] TypescriptParser.ContinueStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>returnStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] TypescriptParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>returnStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] TypescriptParser.ReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] TypescriptParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] TypescriptParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclaration([NotNull] TypescriptParser.VariableDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclaration([NotNull] TypescriptParser.VariableDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.variableType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableType([NotNull] TypescriptParser.VariableTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.variableType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableType([NotNull] TypescriptParser.VariableTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.variableDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclarator([NotNull] TypescriptParser.VariableDeclaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.variableDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclarator([NotNull] TypescriptParser.VariableDeclaratorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.switchSection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchSection([NotNull] TypescriptParser.SwitchSectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.switchSection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchSection([NotNull] TypescriptParser.SwitchSectionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.switchLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchLabel([NotNull] TypescriptParser.SwitchLabelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.switchLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchLabel([NotNull] TypescriptParser.SwitchLabelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.statementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatementList([NotNull] TypescriptParser.StatementListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.statementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatementList([NotNull] TypescriptParser.StatementListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.forInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForInitializer([NotNull] TypescriptParser.ForInitializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.forInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForInitializer([NotNull] TypescriptParser.ForInitializerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.forIterator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForIterator([NotNull] TypescriptParser.ForIteratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.forIterator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForIterator([NotNull] TypescriptParser.ForIteratorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.moduleDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleDeclaration([NotNull] TypescriptParser.ModuleDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.moduleDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleDeclaration([NotNull] TypescriptParser.ModuleDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.moduleBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleBody([NotNull] TypescriptParser.ModuleBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.moduleBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleBody([NotNull] TypescriptParser.ModuleBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.moduleMemberDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleMemberDeclarations([NotNull] TypescriptParser.ModuleMemberDeclarationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.moduleMemberDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleMemberDeclarations([NotNull] TypescriptParser.ModuleMemberDeclarationsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.moduleMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleMemberDeclaration([NotNull] TypescriptParser.ModuleMemberDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.moduleMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleMemberDeclaration([NotNull] TypescriptParser.ModuleMemberDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.functionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDeclaration([NotNull] TypescriptParser.FunctionDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.functionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDeclaration([NotNull] TypescriptParser.FunctionDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.typeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeDeclaration([NotNull] TypescriptParser.TypeDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.typeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeDeclaration([NotNull] TypescriptParser.TypeDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.typeParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeParameterList([NotNull] TypescriptParser.TypeParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.typeParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeParameterList([NotNull] TypescriptParser.TypeParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.typeParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeParameter([NotNull] TypescriptParser.TypeParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.typeParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeParameter([NotNull] TypescriptParser.TypeParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.classBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassBody([NotNull] TypescriptParser.ClassBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.classBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassBody([NotNull] TypescriptParser.ClassBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.classMemberDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassMemberDeclarations([NotNull] TypescriptParser.ClassMemberDeclarationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.classMemberDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassMemberDeclarations([NotNull] TypescriptParser.ClassMemberDeclarationsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.classMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassMemberDeclaration([NotNull] TypescriptParser.ClassMemberDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.classMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassMemberDeclaration([NotNull] TypescriptParser.ClassMemberDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.allMemberModifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAllMemberModifiers([NotNull] TypescriptParser.AllMemberModifiersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.allMemberModifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAllMemberModifiers([NotNull] TypescriptParser.AllMemberModifiersContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.allMemberModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAllMemberModifier([NotNull] TypescriptParser.AllMemberModifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.allMemberModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAllMemberModifier([NotNull] TypescriptParser.AllMemberModifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.commonMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommonMemberDeclaration([NotNull] TypescriptParser.CommonMemberDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.commonMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommonMemberDeclaration([NotNull] TypescriptParser.CommonMemberDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.typedMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypedMemberDeclaration([NotNull] TypescriptParser.TypedMemberDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.typedMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypedMemberDeclaration([NotNull] TypescriptParser.TypedMemberDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.classField"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassField([NotNull] TypescriptParser.ClassFieldContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.classField"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassField([NotNull] TypescriptParser.ClassFieldContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.returnTypeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnTypeList([NotNull] TypescriptParser.ReturnTypeListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.returnTypeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnTypeList([NotNull] TypescriptParser.ReturnTypeListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.returnType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnType([NotNull] TypescriptParser.ReturnTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.returnType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnType([NotNull] TypescriptParser.ReturnTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.methodBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodBody([NotNull] TypescriptParser.MethodBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.methodBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodBody([NotNull] TypescriptParser.MethodBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.formalParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormalParameterList([NotNull] TypescriptParser.FormalParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.formalParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormalParameterList([NotNull] TypescriptParser.FormalParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.fixedParameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixedParameters([NotNull] TypescriptParser.FixedParametersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.fixedParameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixedParameters([NotNull] TypescriptParser.FixedParametersContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.fixedParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixedParameter([NotNull] TypescriptParser.FixedParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.fixedParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixedParameter([NotNull] TypescriptParser.FixedParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.constructorInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructorInitializer([NotNull] TypescriptParser.ConstructorInitializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.constructorInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructorInitializer([NotNull] TypescriptParser.ConstructorInitializerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBody([NotNull] TypescriptParser.BodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBody([NotNull] TypescriptParser.BodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.variantTypeParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariantTypeParameterList([NotNull] TypescriptParser.VariantTypeParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.variantTypeParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariantTypeParameterList([NotNull] TypescriptParser.VariantTypeParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.variantTypeParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariantTypeParameter([NotNull] TypescriptParser.VariantTypeParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.variantTypeParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariantTypeParameter([NotNull] TypescriptParser.VariantTypeParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.enumBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumBody([NotNull] TypescriptParser.EnumBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.enumBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumBody([NotNull] TypescriptParser.EnumBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.enumMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumMemberDeclaration([NotNull] TypescriptParser.EnumMemberDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.enumMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumMemberDeclaration([NotNull] TypescriptParser.EnumMemberDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.rightArrow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRightArrow([NotNull] TypescriptParser.RightArrowContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.rightArrow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRightArrow([NotNull] TypescriptParser.RightArrowContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.rightShift"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRightShift([NotNull] TypescriptParser.RightShiftContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.rightShift"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRightShift([NotNull] TypescriptParser.RightShiftContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.rightShiftAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRightShiftAssignment([NotNull] TypescriptParser.RightShiftAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.rightShiftAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRightShiftAssignment([NotNull] TypescriptParser.RightShiftAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] TypescriptParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] TypescriptParser.LiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.booleanLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanLiteral([NotNull] TypescriptParser.BooleanLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.booleanLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanLiteral([NotNull] TypescriptParser.BooleanLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.stringLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringLiteral([NotNull] TypescriptParser.StringLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.stringLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringLiteral([NotNull] TypescriptParser.StringLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.classDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassDefinition([NotNull] TypescriptParser.ClassDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.classDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassDefinition([NotNull] TypescriptParser.ClassDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.enumDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumDefinition([NotNull] TypescriptParser.EnumDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.enumDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumDefinition([NotNull] TypescriptParser.EnumDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.constructorDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructorDeclaration([NotNull] TypescriptParser.ConstructorDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.constructorDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructorDeclaration([NotNull] TypescriptParser.ConstructorDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.methodDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodDeclaration([NotNull] TypescriptParser.MethodDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.methodDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodDeclaration([NotNull] TypescriptParser.MethodDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.getterDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGetterDeclaration([NotNull] TypescriptParser.GetterDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.getterDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGetterDeclaration([NotNull] TypescriptParser.GetterDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.setterDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetterDeclaration([NotNull] TypescriptParser.SetterDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.setterDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetterDeclaration([NotNull] TypescriptParser.SetterDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.argDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgDeclaration([NotNull] TypescriptParser.ArgDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.argDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgDeclaration([NotNull] TypescriptParser.ArgDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.methodInvocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodInvocation([NotNull] TypescriptParser.MethodInvocationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.methodInvocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodInvocation([NotNull] TypescriptParser.MethodInvocationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.objectCreationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectCreationExpression([NotNull] TypescriptParser.ObjectCreationExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.objectCreationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectCreationExpression([NotNull] TypescriptParser.ObjectCreationExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] TypescriptParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] TypescriptParser.IdentifierContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
