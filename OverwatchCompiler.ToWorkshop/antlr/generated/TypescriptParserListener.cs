//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from TypescriptParser.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="TypescriptParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public interface ITypescriptParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.sourceFiles"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSourceFiles([NotNull] TypescriptParser.SourceFilesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.sourceFiles"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSourceFiles([NotNull] TypescriptParser.SourceFilesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.sourceFile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSourceFile([NotNull] TypescriptParser.SourceFileContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.sourceFile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSourceFile([NotNull] TypescriptParser.SourceFileContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.importDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportDeclaration([NotNull] TypescriptParser.ImportDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.importDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportDeclaration([NotNull] TypescriptParser.ImportDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.moduleOrTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleOrTypeName([NotNull] TypescriptParser.ModuleOrTypeNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.moduleOrTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleOrTypeName([NotNull] TypescriptParser.ModuleOrTypeNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.typeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeList([NotNull] TypescriptParser.TypeListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.typeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeList([NotNull] TypescriptParser.TypeListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] TypescriptParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] TypescriptParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.baseType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBaseType([NotNull] TypescriptParser.BaseTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.baseType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBaseType([NotNull] TypescriptParser.BaseTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.primitiveType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveType([NotNull] TypescriptParser.PrimitiveTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.primitiveType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveType([NotNull] TypescriptParser.PrimitiveTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.classType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassType([NotNull] TypescriptParser.ClassTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.classType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassType([NotNull] TypescriptParser.ClassTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.typeArgumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeArgumentList([NotNull] TypescriptParser.TypeArgumentListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.typeArgumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeArgumentList([NotNull] TypescriptParser.TypeArgumentListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.functionType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionType([NotNull] TypescriptParser.FunctionTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.functionType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionType([NotNull] TypescriptParser.FunctionTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgumentList([NotNull] TypescriptParser.ArgumentListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgumentList([NotNull] TypescriptParser.ArgumentListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument([NotNull] TypescriptParser.ArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument([NotNull] TypescriptParser.ArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] TypescriptParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] TypescriptParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.nonAssignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNonAssignmentExpression([NotNull] TypescriptParser.NonAssignmentExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.nonAssignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNonAssignmentExpression([NotNull] TypescriptParser.NonAssignmentExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] TypescriptParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] TypescriptParser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.assignmentOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentOperator([NotNull] TypescriptParser.AssignmentOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.assignmentOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentOperator([NotNull] TypescriptParser.AssignmentOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.conditionalOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionalOrExpression([NotNull] TypescriptParser.ConditionalOrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.conditionalOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionalOrExpression([NotNull] TypescriptParser.ConditionalOrExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.conditionalAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionalAndExpression([NotNull] TypescriptParser.ConditionalAndExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.conditionalAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionalAndExpression([NotNull] TypescriptParser.ConditionalAndExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.inclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInclusiveOrExpression([NotNull] TypescriptParser.InclusiveOrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.inclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInclusiveOrExpression([NotNull] TypescriptParser.InclusiveOrExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.exclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExclusiveOrExpression([NotNull] TypescriptParser.ExclusiveOrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.exclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExclusiveOrExpression([NotNull] TypescriptParser.ExclusiveOrExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.andExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAndExpression([NotNull] TypescriptParser.AndExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.andExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAndExpression([NotNull] TypescriptParser.AndExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.equalityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqualityExpression([NotNull] TypescriptParser.EqualityExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.equalityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqualityExpression([NotNull] TypescriptParser.EqualityExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.castExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCastExpression([NotNull] TypescriptParser.CastExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.castExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCastExpression([NotNull] TypescriptParser.CastExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.relationalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationalExpression([NotNull] TypescriptParser.RelationalExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.relationalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationalExpression([NotNull] TypescriptParser.RelationalExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.shiftExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShiftExpression([NotNull] TypescriptParser.ShiftExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.shiftExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShiftExpression([NotNull] TypescriptParser.ShiftExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.additiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditiveExpression([NotNull] TypescriptParser.AdditiveExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.additiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditiveExpression([NotNull] TypescriptParser.AdditiveExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.multiplicativeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicativeExpression([NotNull] TypescriptParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.multiplicativeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicativeExpression([NotNull] TypescriptParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.unaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExpression([NotNull] TypescriptParser.UnaryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.unaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExpression([NotNull] TypescriptParser.UnaryExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimaryExpression([NotNull] TypescriptParser.PrimaryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimaryExpression([NotNull] TypescriptParser.PrimaryExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.nativeMethodInvocationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNativeMethodInvocationStatement([NotNull] TypescriptParser.NativeMethodInvocationStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.nativeMethodInvocationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNativeMethodInvocationStatement([NotNull] TypescriptParser.NativeMethodInvocationStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>literalExpression</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralExpression([NotNull] TypescriptParser.LiteralExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>literalExpression</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralExpression([NotNull] TypescriptParser.LiteralExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleNameExpression</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleNameExpression([NotNull] TypescriptParser.SimpleNameExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleNameExpression</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleNameExpression([NotNull] TypescriptParser.SimpleNameExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesisExpressions</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesisExpressions([NotNull] TypescriptParser.ParenthesisExpressionsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesisExpressions</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesisExpressions([NotNull] TypescriptParser.ParenthesisExpressionsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>thisReferenceExpression</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterThisReferenceExpression([NotNull] TypescriptParser.ThisReferenceExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>thisReferenceExpression</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitThisReferenceExpression([NotNull] TypescriptParser.ThisReferenceExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>objectCreation</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectCreation([NotNull] TypescriptParser.ObjectCreationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>objectCreation</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectCreation([NotNull] TypescriptParser.ObjectCreationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>arrayCreationExpression</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayCreationExpression([NotNull] TypescriptParser.ArrayCreationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>arrayCreationExpression</c>
	/// labeled alternative in <see cref="TypescriptParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayCreationExpression([NotNull] TypescriptParser.ArrayCreationExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionList([NotNull] TypescriptParser.ExpressionListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionList([NotNull] TypescriptParser.ExpressionListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.memberAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberAccess([NotNull] TypescriptParser.MemberAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.memberAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberAccess([NotNull] TypescriptParser.MemberAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.bracketExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBracketExpression([NotNull] TypescriptParser.BracketExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.bracketExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBracketExpression([NotNull] TypescriptParser.BracketExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.lambdaExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLambdaExpression([NotNull] TypescriptParser.LambdaExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.lambdaExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLambdaExpression([NotNull] TypescriptParser.LambdaExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.anonymousFunctionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnonymousFunctionSignature([NotNull] TypescriptParser.AnonymousFunctionSignatureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.anonymousFunctionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnonymousFunctionSignature([NotNull] TypescriptParser.AnonymousFunctionSignatureContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.explicitAnonymousFunctionParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicitAnonymousFunctionParameterList([NotNull] TypescriptParser.ExplicitAnonymousFunctionParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.explicitAnonymousFunctionParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicitAnonymousFunctionParameterList([NotNull] TypescriptParser.ExplicitAnonymousFunctionParameterListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.explicitAnonymousFunctionParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicitAnonymousFunctionParameter([NotNull] TypescriptParser.ExplicitAnonymousFunctionParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.explicitAnonymousFunctionParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicitAnonymousFunctionParameter([NotNull] TypescriptParser.ExplicitAnonymousFunctionParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.implicitAnonymousFunctionParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplicitAnonymousFunctionParameterList([NotNull] TypescriptParser.ImplicitAnonymousFunctionParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.implicitAnonymousFunctionParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplicitAnonymousFunctionParameterList([NotNull] TypescriptParser.ImplicitAnonymousFunctionParameterListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.anonymousFunctionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnonymousFunctionBody([NotNull] TypescriptParser.AnonymousFunctionBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.anonymousFunctionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnonymousFunctionBody([NotNull] TypescriptParser.AnonymousFunctionBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>declarationStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclarationStatement([NotNull] TypescriptParser.DeclarationStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>declarationStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclarationStatement([NotNull] TypescriptParser.DeclarationStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>embedded</c>
	/// labeled alternative in <see cref="TypescriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmbedded([NotNull] TypescriptParser.EmbeddedContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>embedded</c>
	/// labeled alternative in <see cref="TypescriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmbedded([NotNull] TypescriptParser.EmbeddedContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.embeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmbeddedStatement([NotNull] TypescriptParser.EmbeddedStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.embeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmbeddedStatement([NotNull] TypescriptParser.EmbeddedStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>emptyStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmptyStatement([NotNull] TypescriptParser.EmptyStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>emptyStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmptyStatement([NotNull] TypescriptParser.EmptyStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>expressionStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionStatement([NotNull] TypescriptParser.ExpressionStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>expressionStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionStatement([NotNull] TypescriptParser.ExpressionStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ifStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatement([NotNull] TypescriptParser.IfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ifStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatement([NotNull] TypescriptParser.IfStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>switchStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchStatement([NotNull] TypescriptParser.SwitchStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>switchStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchStatement([NotNull] TypescriptParser.SwitchStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>whileStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStatement([NotNull] TypescriptParser.WhileStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>whileStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStatement([NotNull] TypescriptParser.WhileStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>forStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStatement([NotNull] TypescriptParser.ForStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>forStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStatement([NotNull] TypescriptParser.ForStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>foreachStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForeachStatement([NotNull] TypescriptParser.ForeachStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>foreachStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForeachStatement([NotNull] TypescriptParser.ForeachStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>breakStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreakStatement([NotNull] TypescriptParser.BreakStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>breakStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreakStatement([NotNull] TypescriptParser.BreakStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>continueStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContinueStatement([NotNull] TypescriptParser.ContinueStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>continueStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContinueStatement([NotNull] TypescriptParser.ContinueStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>returnStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStatement([NotNull] TypescriptParser.ReturnStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>returnStatement</c>
	/// labeled alternative in <see cref="TypescriptParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStatement([NotNull] TypescriptParser.ReturnStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] TypescriptParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] TypescriptParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclaration([NotNull] TypescriptParser.VariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclaration([NotNull] TypescriptParser.VariableDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.variableType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableType([NotNull] TypescriptParser.VariableTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.variableType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableType([NotNull] TypescriptParser.VariableTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.variableDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclarator([NotNull] TypescriptParser.VariableDeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.variableDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclarator([NotNull] TypescriptParser.VariableDeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.switchSection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchSection([NotNull] TypescriptParser.SwitchSectionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.switchSection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchSection([NotNull] TypescriptParser.SwitchSectionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.switchLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchLabel([NotNull] TypescriptParser.SwitchLabelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.switchLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchLabel([NotNull] TypescriptParser.SwitchLabelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementList([NotNull] TypescriptParser.StatementListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementList([NotNull] TypescriptParser.StatementListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.forInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForInitializer([NotNull] TypescriptParser.ForInitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.forInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForInitializer([NotNull] TypescriptParser.ForInitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.forIterator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForIterator([NotNull] TypescriptParser.ForIteratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.forIterator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForIterator([NotNull] TypescriptParser.ForIteratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.moduleDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleDeclaration([NotNull] TypescriptParser.ModuleDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.moduleDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleDeclaration([NotNull] TypescriptParser.ModuleDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.moduleBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleBody([NotNull] TypescriptParser.ModuleBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.moduleBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleBody([NotNull] TypescriptParser.ModuleBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.moduleMemberDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleMemberDeclarations([NotNull] TypescriptParser.ModuleMemberDeclarationsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.moduleMemberDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleMemberDeclarations([NotNull] TypescriptParser.ModuleMemberDeclarationsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.moduleMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleMemberDeclaration([NotNull] TypescriptParser.ModuleMemberDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.moduleMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleMemberDeclaration([NotNull] TypescriptParser.ModuleMemberDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDeclaration([NotNull] TypescriptParser.FunctionDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDeclaration([NotNull] TypescriptParser.FunctionDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.typeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeDeclaration([NotNull] TypescriptParser.TypeDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.typeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeDeclaration([NotNull] TypescriptParser.TypeDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.typeParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeParameterList([NotNull] TypescriptParser.TypeParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.typeParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeParameterList([NotNull] TypescriptParser.TypeParameterListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.typeParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeParameter([NotNull] TypescriptParser.TypeParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.typeParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeParameter([NotNull] TypescriptParser.TypeParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.classBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassBody([NotNull] TypescriptParser.ClassBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.classBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassBody([NotNull] TypescriptParser.ClassBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.classMemberDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassMemberDeclarations([NotNull] TypescriptParser.ClassMemberDeclarationsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.classMemberDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassMemberDeclarations([NotNull] TypescriptParser.ClassMemberDeclarationsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.classMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassMemberDeclaration([NotNull] TypescriptParser.ClassMemberDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.classMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassMemberDeclaration([NotNull] TypescriptParser.ClassMemberDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.allMemberModifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllMemberModifiers([NotNull] TypescriptParser.AllMemberModifiersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.allMemberModifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllMemberModifiers([NotNull] TypescriptParser.AllMemberModifiersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.allMemberModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllMemberModifier([NotNull] TypescriptParser.AllMemberModifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.allMemberModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllMemberModifier([NotNull] TypescriptParser.AllMemberModifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.commonMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommonMemberDeclaration([NotNull] TypescriptParser.CommonMemberDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.commonMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommonMemberDeclaration([NotNull] TypescriptParser.CommonMemberDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.typedMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypedMemberDeclaration([NotNull] TypescriptParser.TypedMemberDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.typedMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypedMemberDeclaration([NotNull] TypescriptParser.TypedMemberDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.classField"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassField([NotNull] TypescriptParser.ClassFieldContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.classField"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassField([NotNull] TypescriptParser.ClassFieldContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.returnTypeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnTypeList([NotNull] TypescriptParser.ReturnTypeListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.returnTypeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnTypeList([NotNull] TypescriptParser.ReturnTypeListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.returnType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnType([NotNull] TypescriptParser.ReturnTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.returnType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnType([NotNull] TypescriptParser.ReturnTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.methodBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodBody([NotNull] TypescriptParser.MethodBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.methodBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodBody([NotNull] TypescriptParser.MethodBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.formalParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormalParameterList([NotNull] TypescriptParser.FormalParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.formalParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormalParameterList([NotNull] TypescriptParser.FormalParameterListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.fixedParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFixedParameters([NotNull] TypescriptParser.FixedParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.fixedParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFixedParameters([NotNull] TypescriptParser.FixedParametersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.fixedParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFixedParameter([NotNull] TypescriptParser.FixedParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.fixedParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFixedParameter([NotNull] TypescriptParser.FixedParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.constructorInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstructorInitializer([NotNull] TypescriptParser.ConstructorInitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.constructorInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstructorInitializer([NotNull] TypescriptParser.ConstructorInitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBody([NotNull] TypescriptParser.BodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBody([NotNull] TypescriptParser.BodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.variantTypeParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariantTypeParameterList([NotNull] TypescriptParser.VariantTypeParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.variantTypeParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariantTypeParameterList([NotNull] TypescriptParser.VariantTypeParameterListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.variantTypeParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariantTypeParameter([NotNull] TypescriptParser.VariantTypeParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.variantTypeParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariantTypeParameter([NotNull] TypescriptParser.VariantTypeParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.enumBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumBody([NotNull] TypescriptParser.EnumBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.enumBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumBody([NotNull] TypescriptParser.EnumBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.enumMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumMemberDeclaration([NotNull] TypescriptParser.EnumMemberDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.enumMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumMemberDeclaration([NotNull] TypescriptParser.EnumMemberDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.rightArrow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRightArrow([NotNull] TypescriptParser.RightArrowContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.rightArrow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRightArrow([NotNull] TypescriptParser.RightArrowContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.rightShift"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRightShift([NotNull] TypescriptParser.RightShiftContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.rightShift"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRightShift([NotNull] TypescriptParser.RightShiftContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.rightShiftAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRightShiftAssignment([NotNull] TypescriptParser.RightShiftAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.rightShiftAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRightShiftAssignment([NotNull] TypescriptParser.RightShiftAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] TypescriptParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] TypescriptParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.booleanLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanLiteral([NotNull] TypescriptParser.BooleanLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.booleanLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanLiteral([NotNull] TypescriptParser.BooleanLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.stringLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringLiteral([NotNull] TypescriptParser.StringLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.stringLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringLiteral([NotNull] TypescriptParser.StringLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.classDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassDefinition([NotNull] TypescriptParser.ClassDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.classDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassDefinition([NotNull] TypescriptParser.ClassDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.enumDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumDefinition([NotNull] TypescriptParser.EnumDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.enumDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumDefinition([NotNull] TypescriptParser.EnumDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.constructorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstructorDeclaration([NotNull] TypescriptParser.ConstructorDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.constructorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstructorDeclaration([NotNull] TypescriptParser.ConstructorDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.methodDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodDeclaration([NotNull] TypescriptParser.MethodDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.methodDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodDeclaration([NotNull] TypescriptParser.MethodDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.getterDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGetterDeclaration([NotNull] TypescriptParser.GetterDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.getterDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGetterDeclaration([NotNull] TypescriptParser.GetterDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.setterDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetterDeclaration([NotNull] TypescriptParser.SetterDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.setterDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetterDeclaration([NotNull] TypescriptParser.SetterDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.argDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgDeclaration([NotNull] TypescriptParser.ArgDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.argDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgDeclaration([NotNull] TypescriptParser.ArgDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.methodInvocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodInvocation([NotNull] TypescriptParser.MethodInvocationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.methodInvocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodInvocation([NotNull] TypescriptParser.MethodInvocationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.objectCreationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectCreationExpression([NotNull] TypescriptParser.ObjectCreationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.objectCreationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectCreationExpression([NotNull] TypescriptParser.ObjectCreationExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TypescriptParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] TypescriptParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TypescriptParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] TypescriptParser.IdentifierContext context);
}
